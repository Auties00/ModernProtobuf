/home/alessandro/.jdks/openjdk-21/bin/java -javaagent:/snap/intellij-idea-community/530/lib/idea_rt.jar=42573:/snap/intellij-idea-community/530/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath /home/alessandro/IdeaProjects/ModernProtobuf/plugin/test/target/classes:/home/alessandro/IdeaProjects/ModernProtobuf/base/target/classes:/home/alessandro/.m2/repository/com/google/protobuf/protobuf-java/3.24.2/protobuf-java-3.24.2.jar:/home/alessandro/.m2/repository/com/google/protobuf/protobuf-javalite/3.24.2/protobuf-javalite-3.24.2.jar:/home/alessandro/.m2/repository/org/openjdk/jmh/jmh-core/1.35/jmh-core-1.35.jar:/home/alessandro/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/home/alessandro/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/home/alessandro/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.35/jmh-generator-annprocess-1.35.jar:/home/alessandro/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-protobuf/2.14.0/jackson-dataformat-protobuf-2.14.0.jar:/home/alessandro/.m2/repository/com/squareup/protoparser/4.0.3/protoparser-4.0.3.jar:/home/alessandro/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.14.0/jackson-databind-2.14.0.jar:/home/alessandro/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.14.0/jackson-annotations-2.14.0.jar:/home/alessandro/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.14.0/jackson-core-2.14.0.jar:/home/alessandro/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.0/junit-jupiter-5.9.0.jar:/home/alessandro/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.0/junit-jupiter-api-5.9.0.jar:/home/alessandro/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/alessandro/.m2/repository/org/junit/platform/junit-platform-commons/1.9.0/junit-platform-commons-1.9.0.jar:/home/alessandro/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.0/junit-jupiter-params-5.9.0.jar:/home/alessandro/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.0/junit-jupiter-engine-5.9.0.jar:/home/alessandro/.m2/repository/org/junit/platform/junit-platform-engine/1.9.0/junit-platform-engine-1.9.0.jar:/home/alessandro/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar org.openjdk.jmh.Main it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.*
# JMH version: 1.35
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/alessandro/.jdks/openjdk-21/bin/java
# VM options: -javaagent:/snap/intellij-idea-community/530/lib/idea_rt.jar=42573:/snap/intellij-idea-community/530/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleLiteProtobufDeserialization

# Run progress: 0.00% complete, ETA 00:08:00
# Fork: 1 of 1
# Warmup Iteration   1: 184.942 us/op
# Warmup Iteration   2: 182.796 us/op
# Warmup Iteration   3: 182.311 us/op
Iteration   1: 181.678 us/op
Iteration   2: 181.548 us/op
Iteration   3: 182.070 us/op
Iteration   4: 182.769 us/op
Iteration   5: 182.222 us/op


Result "it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleLiteProtobufDeserialization":
  182.057 ±(99.9%) 1.864 us/op [Average]
  (min, avg, max) = (181.548, 182.057, 182.769), stdev = 0.484
  CI (99.9%): [180.193, 183.921] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/alessandro/.jdks/openjdk-21/bin/java
# VM options: -javaagent:/snap/intellij-idea-community/530/lib/idea_rt.jar=42573:/snap/intellij-idea-community/530/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleLiteProtobufSerialization

# Run progress: 16.67% complete, ETA 00:06:43
# Fork: 1 of 1
# Warmup Iteration   1: 166.033 us/op
# Warmup Iteration   2: 163.928 us/op
# Warmup Iteration   3: 163.500 us/op
Iteration   1: 164.207 us/op
Iteration   2: 164.265 us/op
Iteration   3: 164.341 us/op
Iteration   4: 164.006 us/op
Iteration   5: 164.111 us/op


Result "it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleLiteProtobufSerialization":
  164.186 ±(99.9%) 0.504 us/op [Average]
  (min, avg, max) = (164.006, 164.186, 164.341), stdev = 0.131
  CI (99.9%): [163.682, 164.690] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/alessandro/.jdks/openjdk-21/bin/java
# VM options: -javaagent:/snap/intellij-idea-community/530/lib/idea_rt.jar=42573:/snap/intellij-idea-community/530/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleProtobufDeserialization

# Run progress: 33.33% complete, ETA 00:05:22
# Fork: 1 of 1
# Warmup Iteration   1: 117.735 us/op
# Warmup Iteration   2: 116.786 us/op
# Warmup Iteration   3: 117.391 us/op
Iteration   1: 117.336 us/op
Iteration   2: 117.186 us/op
Iteration   3: 117.418 us/op
Iteration   4: 117.358 us/op
Iteration   5: 117.083 us/op


Result "it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleProtobufDeserialization":
  117.276 ±(99.9%) 0.530 us/op [Average]
  (min, avg, max) = (117.083, 117.276, 117.418), stdev = 0.138
  CI (99.9%): [116.746, 117.806] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/alessandro/.jdks/openjdk-21/bin/java
# VM options: -javaagent:/snap/intellij-idea-community/530/lib/idea_rt.jar=42573:/snap/intellij-idea-community/530/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleProtobufSerialization

# Run progress: 50.00% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 80.118 us/op
# Warmup Iteration   2: 79.334 us/op
# Warmup Iteration   3: 78.838 us/op
Iteration   1: 78.943 us/op
Iteration   2: 78.775 us/op
Iteration   3: 78.663 us/op
Iteration   4: 78.688 us/op
Iteration   5: 78.695 us/op


Result "it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleProtobufSerialization":
  78.753 ±(99.9%) 0.440 us/op [Average]
  (min, avg, max) = (78.663, 78.753, 78.943), stdev = 0.114
  CI (99.9%): [78.312, 79.193] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/alessandro/.jdks/openjdk-21/bin/java
# VM options: -javaagent:/snap/intellij-idea-community/530/lib/idea_rt.jar=42573:/snap/intellij-idea-community/530/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.modernProtobufDeserialization

# Run progress: 66.67% complete, ETA 00:02:41
# Fork: 1 of 1
# Warmup Iteration   1: 68.941 us/op
# Warmup Iteration   2: 67.984 us/op
# Warmup Iteration   3: 68.315 us/op
Iteration   1: 68.310 us/op
Iteration   2: 68.313 us/op
Iteration   3: 68.210 us/op
Iteration   4: 68.432 us/op
Iteration   5: 68.268 us/op


Result "it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.modernProtobufDeserialization":
  68.307 ±(99.9%) 0.314 us/op [Average]
  (min, avg, max) = (68.210, 68.307, 68.432), stdev = 0.082
  CI (99.9%): [67.993, 68.620] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/alessandro/.jdks/openjdk-21/bin/java
# VM options: -javaagent:/snap/intellij-idea-community/530/lib/idea_rt.jar=42573:/snap/intellij-idea-community/530/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.modernProtobufSerialization

# Run progress: 83.33% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: 98.088 us/op
# Warmup Iteration   2: 97.900 us/op
# Warmup Iteration   3: 97.298 us/op
Iteration   1: 97.478 us/op
Iteration   2: 97.419 us/op
Iteration   3: 97.421 us/op
Iteration   4: 97.340 us/op
Iteration   5: 97.289 us/op


Result "it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.modernProtobufSerialization":
  97.389 ±(99.9%) 0.286 us/op [Average]
  (min, avg, max) = (97.289, 97.389, 97.478), stdev = 0.074
  CI (99.9%): [97.103, 97.676] (assumes normal distribution)


# Run complete. Total time: 00:08:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                     Mode  Cnt    Score   Error  Units
SimplePerformanceBenchmark.googleLiteProtobufDeserialization  avgt    5  182.057 ± 1.864  us/op
SimplePerformanceBenchmark.googleProtobufDeserialization      avgt    5  117.276 ± 0.530  us/op
SimplePerformanceBenchmark.modernProtobufDeserialization      avgt    5   68.307 ± 0.314  us/op
SimplePerformanceBenchmark.googleLiteProtobufSerialization    avgt    5  164.186 ± 0.504  us/op
SimplePerformanceBenchmark.googleProtobufSerialization        avgt    5   78.753 ± 0.440  us/op
SimplePerformanceBenchmark.modernProtobufSerialization        avgt    5   97.389 ± 0.286  us/op

Process finished with exit code 0
