/home/alessandro/.jdks/openjdk-21/bin/java -javaagent:/snap/intellij-idea-community/535/lib/idea_rt.jar=40629:/snap/intellij-idea-community/535/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath /home/alessandro/IdeaProjects/ModernProtobuf/plugin/test/target/classes:/home/alessandro/IdeaProjects/ModernProtobuf/base/target/classes:/home/alessandro/.m2/repository/com/google/protobuf/protobuf-java/3.24.2/protobuf-java-3.24.2.jar:/home/alessandro/.m2/repository/com/google/protobuf/protobuf-javalite/3.24.2/protobuf-javalite-3.24.2.jar:/home/alessandro/.m2/repository/org/openjdk/jmh/jmh-core/1.35/jmh-core-1.35.jar:/home/alessandro/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/home/alessandro/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/home/alessandro/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.35/jmh-generator-annprocess-1.35.jar:/home/alessandro/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-protobuf/2.14.0/jackson-dataformat-protobuf-2.14.0.jar:/home/alessandro/.m2/repository/com/squareup/protoparser/4.0.3/protoparser-4.0.3.jar:/home/alessandro/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.14.0/jackson-databind-2.14.0.jar:/home/alessandro/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.14.0/jackson-annotations-2.14.0.jar:/home/alessandro/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.14.0/jackson-core-2.14.0.jar:/home/alessandro/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.0/junit-jupiter-5.9.0.jar:/home/alessandro/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.0/junit-jupiter-api-5.9.0.jar:/home/alessandro/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/alessandro/.m2/repository/org/junit/platform/junit-platform-commons/1.9.0/junit-platform-commons-1.9.0.jar:/home/alessandro/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.0/junit-jupiter-params-5.9.0.jar:/home/alessandro/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.0/junit-jupiter-engine-5.9.0.jar:/home/alessandro/.m2/repository/org/junit/platform/junit-platform-engine/1.9.0/junit-platform-engine-1.9.0.jar:/home/alessandro/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar org.openjdk.jmh.Main it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.*
# JMH version: 1.35
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/alessandro/.jdks/openjdk-21/bin/java
# VM options: -javaagent:/snap/intellij-idea-community/535/lib/idea_rt.jar=40629:/snap/intellij-idea-community/535/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleLiteProtobufDeserialization

# Run progress: 0.00% complete, ETA 00:08:00
# Fork: 1 of 1
# Warmup Iteration   1: 183.772 us/op
# Warmup Iteration   2: 181.749 us/op
# Warmup Iteration   3: 181.711 us/op
Iteration   1: 181.860 us/op
Iteration   2: 181.827 us/op
Iteration   3: 182.079 us/op
Iteration   4: 182.087 us/op
Iteration   5: 181.729 us/op


Result "it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleLiteProtobufDeserialization":
  181.916 ±(99.9%) 0.615 us/op [Average]
  (min, avg, max) = (181.729, 181.916, 182.087), stdev = 0.160
  CI (99.9%): [181.301, 182.531] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/alessandro/.jdks/openjdk-21/bin/java
# VM options: -javaagent:/snap/intellij-idea-community/535/lib/idea_rt.jar=40629:/snap/intellij-idea-community/535/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleLiteProtobufSerialization

# Run progress: 16.67% complete, ETA 00:06:43
# Fork: 1 of 1
# Warmup Iteration   1: 156.807 us/op
# Warmup Iteration   2: 157.081 us/op
# Warmup Iteration   3: 157.357 us/op
Iteration   1: 157.498 us/op
Iteration   2: 157.727 us/op
Iteration   3: 157.449 us/op
Iteration   4: 157.253 us/op
Iteration   5: 157.039 us/op


Result "it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleLiteProtobufSerialization":
  157.393 ±(99.9%) 1.001 us/op [Average]
  (min, avg, max) = (157.039, 157.393, 157.727), stdev = 0.260
  CI (99.9%): [156.392, 158.394] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/alessandro/.jdks/openjdk-21/bin/java
# VM options: -javaagent:/snap/intellij-idea-community/535/lib/idea_rt.jar=40629:/snap/intellij-idea-community/535/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleProtobufDeserialization

# Run progress: 33.33% complete, ETA 00:05:22
# Fork: 1 of 1
# Warmup Iteration   1: 117.915 us/op
# Warmup Iteration   2: 117.645 us/op
# Warmup Iteration   3: 118.204 us/op
Iteration   1: 118.277 us/op
Iteration   2: 118.034 us/op
Iteration   3: 118.085 us/op
Iteration   4: 118.164 us/op
Iteration   5: 118.246 us/op


Result "it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleProtobufDeserialization":
  118.161 ±(99.9%) 0.397 us/op [Average]
  (min, avg, max) = (118.034, 118.161, 118.277), stdev = 0.103
  CI (99.9%): [117.764, 118.559] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/alessandro/.jdks/openjdk-21/bin/java
# VM options: -javaagent:/snap/intellij-idea-community/535/lib/idea_rt.jar=40629:/snap/intellij-idea-community/535/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleProtobufSerialization

# Run progress: 50.00% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 78.094 us/op
# Warmup Iteration   2: 76.986 us/op
# Warmup Iteration   3: 77.081 us/op
Iteration   1: 77.175 us/op
Iteration   2: 76.978 us/op
Iteration   3: 77.047 us/op
Iteration   4: 77.083 us/op
Iteration   5: 77.073 us/op


Result "it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.googleProtobufSerialization":
  77.071 ±(99.9%) 0.273 us/op [Average]
  (min, avg, max) = (76.978, 77.071, 77.175), stdev = 0.071
  CI (99.9%): [76.798, 77.344] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/alessandro/.jdks/openjdk-21/bin/java
# VM options: -javaagent:/snap/intellij-idea-community/535/lib/idea_rt.jar=40629:/snap/intellij-idea-community/535/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.modernProtobufDeserialization

# Run progress: 66.67% complete, ETA 00:02:41
# Fork: 1 of 1
# Warmup Iteration   1: 106.513 us/op
# Warmup Iteration   2: 73.743 us/op
# Warmup Iteration   3: 69.409 us/op
Iteration   1: 69.331 us/op
Iteration   2: 69.429 us/op
Iteration   3: 70.249 us/op
Iteration   4: 69.213 us/op
Iteration   5: 69.293 us/op


Result "it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.modernProtobufDeserialization":
  69.503 ±(99.9%) 1.633 us/op [Average]
  (min, avg, max) = (69.213, 69.503, 70.249), stdev = 0.424
  CI (99.9%): [67.870, 71.136] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/alessandro/.jdks/openjdk-21/bin/java
# VM options: -javaagent:/snap/intellij-idea-community/535/lib/idea_rt.jar=40629:/snap/intellij-idea-community/535/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.modernProtobufSerialization

# Run progress: 83.33% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: 74.647 us/op
# Warmup Iteration   2: 71.689 us/op
# Warmup Iteration   3: 70.057 us/op
Iteration   1: 70.146 us/op
Iteration   2: 70.163 us/op
Iteration   3: 70.249 us/op
Iteration   4: 70.177 us/op
Iteration   5: 70.170 us/op


Result "it.auties.proto.benchmark.simple.SimplePerformanceBenchmark.modernProtobufSerialization":
  70.181 ±(99.9%) 0.152 us/op [Average]
  (min, avg, max) = (70.146, 70.181, 70.249), stdev = 0.040
  CI (99.9%): [70.029, 70.333] (assumes normal distribution)


# Run complete. Total time: 00:08:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                     Mode  Cnt    Score   Error  Units
SimplePerformanceBenchmark.googleLiteProtobufDeserialization  avgt    5  181.916 ± 0.615  us/op
SimplePerformanceBenchmark.googleLiteProtobufSerialization    avgt    5  157.393 ± 1.001  us/op
SimplePerformanceBenchmark.googleProtobufDeserialization      avgt    5  118.161 ± 0.397  us/op
SimplePerformanceBenchmark.googleProtobufSerialization        avgt    5   77.071 ± 0.273  us/op
SimplePerformanceBenchmark.modernProtobufDeserialization      avgt    5   69.503 ± 1.633  us/op
SimplePerformanceBenchmark.modernProtobufSerialization        avgt    5   70.181 ± 0.152  us/op

Process finished with exit code 0
